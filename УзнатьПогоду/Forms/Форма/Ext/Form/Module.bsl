
&НаСервере
Процедура ЗапросНаСервере()
	
	Если Язык = "" Тогда
		Язык  = "ru, пока можно не заполнять";
	КонецЕсли;
	
	APIKey	   = "2d4c4ed7ade44175e44e98a6ef98a8c2";
	URNOpenWeather = "api.openweathermap.org";
	URLWeather = "/data/2.5/weather?";
	
	Координаты = ПолучитьКоординаты(НазваниеГорода, APIKey, 1);
	
	URLРесурса = URLWeather + "lat=" + Координаты["Широта"] + "&lon=" + Координаты["Долгота"] + "&appid=" + APIKey + "&units=metric";	
	
	
	Соединение = Новый HTTPСоединение(URNOpenWeather);
	Запрос 	   = Новый HTTPЗапрос(URLРесурса);
	Результат  = Соединение.Получить(Запрос);
	ТелоРезультата = Результат.ПолучитьТелоКакСтроку();
	ОбъектJSON = ДесереализацияJSON(ТелоРезультата);
	Температура = ОбъектJSON.main["temp"]; //ОбъектJSON.main.temp
	
	
КонецПроцедуры

&НаКлиенте
Процедура Запрос(Команда)
	ЗапросНаСервере();
КонецПроцедуры 



Функция ПолучитьКоординаты(НазваниеГорода, API, Ограничение = 5)
	
	Координаты 	 = Новый Соответствие;
	
	//Получаем координаты по названию города
	URNOpenWeather = "api.openweathermap.org";
	URLGeocoding   = "/geo/1.0/direct?q=" + НазваниеГорода + "&limit=" + Ограничение + "&appid=" + API;
	
	Соединение = Новый HTTPСоединение(URNOpenWeather);
	
	//openweather позволяет обращаться к API GET-запросами у которых APIKey указывается в параметрах (в URL), 
	//таким образом можно не указывать заголовки, но если бы была необходимость то код выглядел бы так:
	
	// Заголовки = Новый Сответствение;
	// Заголовки.Вставить("НазваниеПараметра", "ЗначениеПараметра);
	// Заголовки.Вставить("Accept-Encoding", "deflate, gzip"); - так указывается как будет сжиматься запрос
	// Запрос = Новый HTTPЗапрос(URLGeocoding, Заголовки); 
	
	
	Запрос	   = Новый HTTPЗапрос(URLGeocoding);
	Результат  = Соединение.Получить(Запрос);
	ТелоРезультата = Результат.ПолучитьТелоКакСтроку();
	
	ОбъектJSON = ДесереализацияJSON(ТелоРезультата);
	Координаты.Вставить("Долгота", ОбъектJSON[0].lon);
	Координаты.Вставить("Широта", ОбъектJSON[0].lat);
	Возврат Координаты;
КонецФункции 

Функция ДесереализацияJSON(Значение)
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(Значение);
	
	Результат = ПрочитатьJSON(ЧтениеJSON);
	
	ЧтениеJSON.Закрыть();
	
	Возврат Результат;
	
КонецФункции

